// Code generated by GoVPP binapi-generator. DO NOT EDIT.
// source: api/memclnt.api.json

/*
Package memclnt is a generated VPP binary API of the 'memclnt' VPP module.

It is generated from this file:
	memclnt.api.json

It contains these VPP binary API objects:
	22 messages
	1 type
	13 services
*/
package memclnt

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

/* Types */

// ModuleVersion represents the VPP binary API type 'module_version'.
// Generated from 'memclnt.api.json', line 544:
//
//            "module_version",
//            [
//                "u32",
//                "major"
//            ],
//            [
//                "u32",
//                "minor"
//            ],
//            [
//                "u32",
//                "patch"
//            ],
//            [
//                "u8",
//                "name",
//                64
//            ],
//            {
//                "crc": "0x4b6da11a"
//            }
//
type ModuleVersion struct {
	Major uint32
	Minor uint32
	Patch uint32
	Name  []byte `struc:"[64]byte"`
}

func (*ModuleVersion) GetTypeName() string {
	return "module_version"
}
func (*ModuleVersion) GetCrcString() string {
	return "4b6da11a"
}

/* Messages */

// MemclntCreate represents the VPP binary API message 'memclnt_create'.
// Generated from 'memclnt.api.json', line 4:
//
//            "memclnt_create",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "ctx_quota"
//            ],
//            [
//                "u64",
//                "input_queue"
//            ],
//            [
//                "u8",
//                "name",
//                64
//            ],
//            [
//                "u32",
//                "api_versions",
//                8
//            ],
//            {
//                "crc": "0x6d33c5ea"
//            }
//
type MemclntCreate struct {
	CtxQuota    int32
	InputQueue  uint64
	Name        []byte   `struc:"[64]byte"`
	APIVersions []uint32 `struc:"[8]uint32"`
}

func (*MemclntCreate) GetMessageName() string {
	return "memclnt_create"
}
func (*MemclntCreate) GetCrcString() string {
	return "6d33c5ea"
}
func (*MemclntCreate) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewMemclntCreate() api.Message {
	return &MemclntCreate{}
}

// MemclntCreateReply represents the VPP binary API message 'memclnt_create_reply'.
// Generated from 'memclnt.api.json', line 36:
//
//            "memclnt_create_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "response"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            [
//                "u32",
//                "index"
//            ],
//            [
//                "u64",
//                "message_table"
//            ],
//            {
//                "crc": "0x42ec4560"
//            }
//
type MemclntCreateReply struct {
	Response     int32
	Handle       uint64
	Index        uint32
	MessageTable uint64
}

func (*MemclntCreateReply) GetMessageName() string {
	return "memclnt_create_reply"
}
func (*MemclntCreateReply) GetCrcString() string {
	return "42ec4560"
}
func (*MemclntCreateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewMemclntCreateReply() api.Message {
	return &MemclntCreateReply{}
}

// MemclntDelete represents the VPP binary API message 'memclnt_delete'.
// Generated from 'memclnt.api.json', line 66:
//
//            "memclnt_delete",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "index"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            {
//                "crc": "0x73240f13"
//            }
//
type MemclntDelete struct {
	Index  uint32
	Handle uint64
}

func (*MemclntDelete) GetMessageName() string {
	return "memclnt_delete"
}
func (*MemclntDelete) GetCrcString() string {
	return "73240f13"
}
func (*MemclntDelete) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func NewMemclntDelete() api.Message {
	return &MemclntDelete{}
}

// MemclntDeleteReply represents the VPP binary API message 'memclnt_delete_reply'.
// Generated from 'memclnt.api.json', line 84:
//
//            "memclnt_delete_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "i32",
//                "response"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            {
//                "crc": "0x3d3b6312"
//            }
//
type MemclntDeleteReply struct {
	Response int32
	Handle   uint64
}

func (*MemclntDeleteReply) GetMessageName() string {
	return "memclnt_delete_reply"
}
func (*MemclntDeleteReply) GetCrcString() string {
	return "3d3b6312"
}
func (*MemclntDeleteReply) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func NewMemclntDeleteReply() api.Message {
	return &MemclntDeleteReply{}
}

// RxThreadExit represents the VPP binary API message 'rx_thread_exit'.
// Generated from 'memclnt.api.json', line 102:
//
//            "rx_thread_exit",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u8",
//                "dummy"
//            ],
//            {
//                "crc": "0xc3a3a452"
//            }
//
type RxThreadExit struct {
	Dummy uint8
}

func (*RxThreadExit) GetMessageName() string {
	return "rx_thread_exit"
}
func (*RxThreadExit) GetCrcString() string {
	return "c3a3a452"
}
func (*RxThreadExit) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func NewRxThreadExit() api.Message {
	return &RxThreadExit{}
}

// MemclntRxThreadSuspend represents the VPP binary API message 'memclnt_rx_thread_suspend'.
// Generated from 'memclnt.api.json', line 116:
//
//            "memclnt_rx_thread_suspend",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u8",
//                "dummy"
//            ],
//            {
//                "crc": "0xc3a3a452"
//            }
//
type MemclntRxThreadSuspend struct {
	Dummy uint8
}

func (*MemclntRxThreadSuspend) GetMessageName() string {
	return "memclnt_rx_thread_suspend"
}
func (*MemclntRxThreadSuspend) GetCrcString() string {
	return "c3a3a452"
}
func (*MemclntRxThreadSuspend) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func NewMemclntRxThreadSuspend() api.Message {
	return &MemclntRxThreadSuspend{}
}

// MemclntReadTimeout represents the VPP binary API message 'memclnt_read_timeout'.
// Generated from 'memclnt.api.json', line 130:
//
//            "memclnt_read_timeout",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u8",
//                "dummy"
//            ],
//            {
//                "crc": "0xc3a3a452"
//            }
//
type MemclntReadTimeout struct {
	Dummy uint8
}

func (*MemclntReadTimeout) GetMessageName() string {
	return "memclnt_read_timeout"
}
func (*MemclntReadTimeout) GetCrcString() string {
	return "c3a3a452"
}
func (*MemclntReadTimeout) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func NewMemclntReadTimeout() api.Message {
	return &MemclntReadTimeout{}
}

// RPCCall represents the VPP binary API message 'rpc_call'.
// Generated from 'memclnt.api.json', line 144:
//
//            "rpc_call",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u64",
//                "function"
//            ],
//            [
//                "u8",
//                "multicast"
//            ],
//            [
//                "u8",
//                "need_barrier_sync"
//            ],
//            [
//                "u8",
//                "send_reply"
//            ],
//            [
//                "u8",
//                "data",
//                0
//            ],
//            {
//                "crc": "0x710d6bbf"
//            }
//
type RPCCall struct {
	Function        uint64
	Multicast       uint8
	NeedBarrierSync uint8
	SendReply       uint8
	Data            uint8
}

func (*RPCCall) GetMessageName() string {
	return "rpc_call"
}
func (*RPCCall) GetCrcString() string {
	return "710d6bbf"
}
func (*RPCCall) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewRPCCall() api.Message {
	return &RPCCall{}
}

// RPCCallReply represents the VPP binary API message 'rpc_call_reply'.
// Generated from 'memclnt.api.json', line 183:
//
//            "rpc_call_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type RPCCallReply struct {
	Retval int32
}

func (*RPCCallReply) GetMessageName() string {
	return "rpc_call_reply"
}
func (*RPCCallReply) GetCrcString() string {
	return "e8d4e804"
}
func (*RPCCallReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewRPCCallReply() api.Message {
	return &RPCCallReply{}
}

// GetFirstMsgID represents the VPP binary API message 'get_first_msg_id'.
// Generated from 'memclnt.api.json', line 201:
//
//            "get_first_msg_id",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "name",
//                64
//            ],
//            {
//                "crc": "0x0cb71b0e"
//            }
//
type GetFirstMsgID struct {
	Name []byte `struc:"[64]byte"`
}

func (*GetFirstMsgID) GetMessageName() string {
	return "get_first_msg_id"
}
func (*GetFirstMsgID) GetCrcString() string {
	return "0cb71b0e"
}
func (*GetFirstMsgID) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewGetFirstMsgID() api.Message {
	return &GetFirstMsgID{}
}

// GetFirstMsgIDReply represents the VPP binary API message 'get_first_msg_id_reply'.
// Generated from 'memclnt.api.json', line 224:
//
//            "get_first_msg_id_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u16",
//                "first_msg_id"
//            ],
//            {
//                "crc": "0x010f5376"
//            }
//
type GetFirstMsgIDReply struct {
	Retval     int32
	FirstMsgID uint16
}

func (*GetFirstMsgIDReply) GetMessageName() string {
	return "get_first_msg_id_reply"
}
func (*GetFirstMsgIDReply) GetCrcString() string {
	return "010f5376"
}
func (*GetFirstMsgIDReply) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewGetFirstMsgIDReply() api.Message {
	return &GetFirstMsgIDReply{}
}

// APIVersions represents the VPP binary API message 'api_versions'.
// Generated from 'memclnt.api.json', line 250:
//
//            "api_versions",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            {
//                "crc": "0x51077d14"
//            }
//
type APIVersions struct{}

func (*APIVersions) GetMessageName() string {
	return "api_versions"
}
func (*APIVersions) GetCrcString() string {
	return "51077d14"
}
func (*APIVersions) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewAPIVersions() api.Message {
	return &APIVersions{}
}

// APIVersionsReply represents the VPP binary API message 'api_versions_reply'.
// Generated from 'memclnt.api.json', line 268:
//
//            "api_versions_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "vl_api_module_version_t",
//                "api_versions",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x0feb30d1"
//            }
//
type APIVersionsReply struct {
	Retval      int32
	Count       uint32 `struc:"sizeof=APIVersions"`
	APIVersions []ModuleVersion
}

func (*APIVersionsReply) GetMessageName() string {
	return "api_versions_reply"
}
func (*APIVersionsReply) GetCrcString() string {
	return "0feb30d1"
}
func (*APIVersionsReply) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewAPIVersionsReply() api.Message {
	return &APIVersionsReply{}
}

// TracePluginMsgIds represents the VPP binary API message 'trace_plugin_msg_ids'.
// Generated from 'memclnt.api.json', line 300:
//
//            "trace_plugin_msg_ids",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "plugin_name",
//                128
//            ],
//            [
//                "u16",
//                "first_msg_id"
//            ],
//            [
//                "u16",
//                "last_msg_id"
//            ],
//            {
//                "crc": "0x64af79f9"
//            }
//
type TracePluginMsgIds struct {
	PluginName []byte `struc:"[128]byte"`
	FirstMsgID uint16
	LastMsgID  uint16
}

func (*TracePluginMsgIds) GetMessageName() string {
	return "trace_plugin_msg_ids"
}
func (*TracePluginMsgIds) GetCrcString() string {
	return "64af79f9"
}
func (*TracePluginMsgIds) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewTracePluginMsgIds() api.Message {
	return &TracePluginMsgIds{}
}

// SockclntCreate represents the VPP binary API message 'sockclnt_create'.
// Generated from 'memclnt.api.json', line 331:
//
//            "sockclnt_create",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "name",
//                64
//            ],
//            {
//                "crc": "0xdf2cf94d"
//            }
//
type SockclntCreate struct {
	Name []byte `struc:"[64]byte"`
}

func (*SockclntCreate) GetMessageName() string {
	return "sockclnt_create"
}
func (*SockclntCreate) GetCrcString() string {
	return "df2cf94d"
}
func (*SockclntCreate) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewSockclntCreate() api.Message {
	return &SockclntCreate{}
}

// SockclntCreateReply represents the VPP binary API message 'sockclnt_create_reply'.
// Generated from 'memclnt.api.json', line 350:
//
//            "sockclnt_create_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "response"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            [
//                "u32",
//                "index"
//            ],
//            {
//                "crc": "0xc828b096"
//            }
//
type SockclntCreateReply struct {
	Response int32
	Handle   uint64
	Index    uint32
}

func (*SockclntCreateReply) GetMessageName() string {
	return "sockclnt_create_reply"
}
func (*SockclntCreateReply) GetCrcString() string {
	return "c828b096"
}
func (*SockclntCreateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewSockclntCreateReply() api.Message {
	return &SockclntCreateReply{}
}

// SockclntDelete represents the VPP binary API message 'sockclnt_delete'.
// Generated from 'memclnt.api.json', line 376:
//
//            "sockclnt_delete",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "index"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            {
//                "crc": "0x73240f13"
//            }
//
type SockclntDelete struct {
	Index  uint32
	Handle uint64
}

func (*SockclntDelete) GetMessageName() string {
	return "sockclnt_delete"
}
func (*SockclntDelete) GetCrcString() string {
	return "73240f13"
}
func (*SockclntDelete) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func NewSockclntDelete() api.Message {
	return &SockclntDelete{}
}

// SockclntDeleteReply represents the VPP binary API message 'sockclnt_delete_reply'.
// Generated from 'memclnt.api.json', line 394:
//
//            "sockclnt_delete_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "i32",
//                "response"
//            ],
//            [
//                "u64",
//                "handle"
//            ],
//            {
//                "crc": "0x3d3b6312"
//            }
//
type SockclntDeleteReply struct {
	Response int32
	Handle   uint64
}

func (*SockclntDeleteReply) GetMessageName() string {
	return "sockclnt_delete_reply"
}
func (*SockclntDeleteReply) GetCrcString() string {
	return "3d3b6312"
}
func (*SockclntDeleteReply) GetMessageType() api.MessageType {
	return api.OtherMessage
}
func NewSockclntDeleteReply() api.Message {
	return &SockclntDeleteReply{}
}

// SockInitShm represents the VPP binary API message 'sock_init_shm'.
// Generated from 'memclnt.api.json', line 412:
//
//            "sock_init_shm",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "requested_size"
//            ],
//            [
//                "u8",
//                "nitems"
//            ],
//            [
//                "u64",
//                "configs",
//                0,
//                "nitems"
//            ],
//            {
//                "crc": "0x51646d92"
//            }
//
type SockInitShm struct {
	RequestedSize uint32
	Nitems        uint8 `struc:"sizeof=Configs"`
	Configs       []uint64
}

func (*SockInitShm) GetMessageName() string {
	return "sock_init_shm"
}
func (*SockInitShm) GetCrcString() string {
	return "51646d92"
}
func (*SockInitShm) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewSockInitShm() api.Message {
	return &SockInitShm{}
}

// SockInitShmReply represents the VPP binary API message 'sock_init_shm_reply'.
// Generated from 'memclnt.api.json', line 444:
//
//            "sock_init_shm_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type SockInitShmReply struct {
	Retval int32
}

func (*SockInitShmReply) GetMessageName() string {
	return "sock_init_shm_reply"
}
func (*SockInitShmReply) GetCrcString() string {
	return "e8d4e804"
}
func (*SockInitShmReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewSockInitShmReply() api.Message {
	return &SockInitShmReply{}
}

// MemclntKeepalive represents the VPP binary API message 'memclnt_keepalive'.
// Generated from 'memclnt.api.json', line 462:
//
//            "memclnt_keepalive",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            {
//                "crc": "0x51077d14"
//            }
//
type MemclntKeepalive struct{}

func (*MemclntKeepalive) GetMessageName() string {
	return "memclnt_keepalive"
}
func (*MemclntKeepalive) GetCrcString() string {
	return "51077d14"
}
func (*MemclntKeepalive) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewMemclntKeepalive() api.Message {
	return &MemclntKeepalive{}
}

// MemclntKeepaliveReply represents the VPP binary API message 'memclnt_keepalive_reply'.
// Generated from 'memclnt.api.json', line 480:
//
//            "memclnt_keepalive_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type MemclntKeepaliveReply struct {
	Retval int32
}

func (*MemclntKeepaliveReply) GetMessageName() string {
	return "memclnt_keepalive_reply"
}
func (*MemclntKeepaliveReply) GetCrcString() string {
	return "e8d4e804"
}
func (*MemclntKeepaliveReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewMemclntKeepaliveReply() api.Message {
	return &MemclntKeepaliveReply{}
}

/* Services */

type Services interface {
	APIVersions(*APIVersions) (*APIVersionsReply, error)
	GetFirstMsgID(*GetFirstMsgID) (*GetFirstMsgIDReply, error)
	MemclntCreate(*MemclntCreate) (*MemclntCreateReply, error)
	MemclntDelete(*MemclntDelete) (*MemclntDeleteReply, error)
	MemclntKeepalive(*MemclntKeepalive) (*MemclntKeepaliveReply, error)
	MemclntReadTimeout(*MemclntReadTimeout) error
	MemclntRxThreadSuspend(*MemclntRxThreadSuspend) error
	RPCCall(*RPCCall) (*RPCCallReply, error)
	RxThreadExit(*RxThreadExit) error
	SockInitShm(*SockInitShm) (*SockInitShmReply, error)
	SockclntCreate(*SockclntCreate) (*SockclntCreateReply, error)
	SockclntDelete(*SockclntDelete) (*SockclntDeleteReply, error)
	TracePluginMsgIds(*TracePluginMsgIds) error
}

func init() {
	api.RegisterMessage((*MemclntCreate)(nil), "memclnt.MemclntCreate")
	api.RegisterMessage((*MemclntCreateReply)(nil), "memclnt.MemclntCreateReply")
	api.RegisterMessage((*MemclntDelete)(nil), "memclnt.MemclntDelete")
	api.RegisterMessage((*MemclntDeleteReply)(nil), "memclnt.MemclntDeleteReply")
	api.RegisterMessage((*RxThreadExit)(nil), "memclnt.RxThreadExit")
	api.RegisterMessage((*MemclntRxThreadSuspend)(nil), "memclnt.MemclntRxThreadSuspend")
	api.RegisterMessage((*MemclntReadTimeout)(nil), "memclnt.MemclntReadTimeout")
	api.RegisterMessage((*RPCCall)(nil), "memclnt.RPCCall")
	api.RegisterMessage((*RPCCallReply)(nil), "memclnt.RPCCallReply")
	api.RegisterMessage((*GetFirstMsgID)(nil), "memclnt.GetFirstMsgID")
	api.RegisterMessage((*GetFirstMsgIDReply)(nil), "memclnt.GetFirstMsgIDReply")
	api.RegisterMessage((*APIVersions)(nil), "memclnt.APIVersions")
	api.RegisterMessage((*APIVersionsReply)(nil), "memclnt.APIVersionsReply")
	api.RegisterMessage((*TracePluginMsgIds)(nil), "memclnt.TracePluginMsgIds")
	api.RegisterMessage((*SockclntCreate)(nil), "memclnt.SockclntCreate")
	api.RegisterMessage((*SockclntCreateReply)(nil), "memclnt.SockclntCreateReply")
	api.RegisterMessage((*SockclntDelete)(nil), "memclnt.SockclntDelete")
	api.RegisterMessage((*SockclntDeleteReply)(nil), "memclnt.SockclntDeleteReply")
	api.RegisterMessage((*SockInitShm)(nil), "memclnt.SockInitShm")
	api.RegisterMessage((*SockInitShmReply)(nil), "memclnt.SockInitShmReply")
	api.RegisterMessage((*MemclntKeepalive)(nil), "memclnt.MemclntKeepalive")
	api.RegisterMessage((*MemclntKeepaliveReply)(nil), "memclnt.MemclntKeepaliveReply")
}
