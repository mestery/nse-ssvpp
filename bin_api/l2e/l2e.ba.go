// Code generated by GoVPP binapi-generator. DO NOT EDIT.
// source: api/l2e.api.json

/*
Package l2e is a generated VPP binary API of the 'l2e' VPP module.

It is generated from this file:
	l2e.api.json

It contains these VPP binary API objects:
	2 messages
	1 service
*/
package l2e

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

/* Messages */

// L2Emulation represents the VPP binary API message 'l2_emulation'.
// Generated from 'l2e.api.json', line 4:
//
//            "l2_emulation",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "u8",
//                "enable"
//            ],
//            {
//                "crc": "0xa36fadc0"
//            }
//
type L2Emulation struct {
	SwIfIndex uint32
	Enable    uint8
}

func (*L2Emulation) GetMessageName() string {
	return "l2_emulation"
}
func (*L2Emulation) GetCrcString() string {
	return "a36fadc0"
}
func (*L2Emulation) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewL2Emulation() api.Message {
	return &L2Emulation{}
}

// L2EmulationReply represents the VPP binary API message 'l2_emulation_reply'.
// Generated from 'l2e.api.json', line 30:
//
//            "l2_emulation_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type L2EmulationReply struct {
	Retval int32
}

func (*L2EmulationReply) GetMessageName() string {
	return "l2_emulation_reply"
}
func (*L2EmulationReply) GetCrcString() string {
	return "e8d4e804"
}
func (*L2EmulationReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewL2EmulationReply() api.Message {
	return &L2EmulationReply{}
}

/* Services */

type Services interface {
	L2Emulation(*L2Emulation) (*L2EmulationReply, error)
}

func init() {
	api.RegisterMessage((*L2Emulation)(nil), "l2e.L2Emulation")
	api.RegisterMessage((*L2EmulationReply)(nil), "l2e.L2EmulationReply")
}
