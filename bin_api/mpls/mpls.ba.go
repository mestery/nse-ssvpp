// Code generated by GoVPP binapi-generator. DO NOT EDIT.
// source: api/mpls.api.json

/*
Package mpls is a generated VPP binary API of the 'mpls' VPP module.

It is generated from this file:
	mpls.api.json

It contains these VPP binary API objects:
	14 messages
	2 types
	7 services
*/
package mpls

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

/* Types */

// FibMplsLabel represents the VPP binary API type 'fib_mpls_label'.
// Generated from 'mpls.api.json', line 531:
//
//            "fib_mpls_label",
//            [
//                "u8",
//                "is_uniform"
//            ],
//            [
//                "u32",
//                "label"
//            ],
//            [
//                "u8",
//                "ttl"
//            ],
//            [
//                "u8",
//                "exp"
//            ],
//            {
//                "crc": "0xc93bf35c"
//            }
//
type FibMplsLabel struct {
	IsUniform uint8
	Label     uint32
	TTL       uint8
	Exp       uint8
}

func (*FibMplsLabel) GetTypeName() string {
	return "fib_mpls_label"
}
func (*FibMplsLabel) GetCrcString() string {
	return "c93bf35c"
}

// FibPath represents the VPP binary API type 'fib_path'.
// Generated from 'mpls.api.json', line 553:
//
//            "fib_path",
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "u32",
//                "table_id"
//            ],
//            [
//                "u8",
//                "weight"
//            ],
//            [
//                "u8",
//                "preference"
//            ],
//            [
//                "u8",
//                "is_local"
//            ],
//            [
//                "u8",
//                "is_drop"
//            ],
//            [
//                "u8",
//                "is_udp_encap"
//            ],
//            [
//                "u8",
//                "is_unreach"
//            ],
//            [
//                "u8",
//                "is_prohibit"
//            ],
//            [
//                "u8",
//                "is_resolve_host"
//            ],
//            [
//                "u8",
//                "is_resolve_attached"
//            ],
//            [
//                "u8",
//                "is_dvr"
//            ],
//            [
//                "u8",
//                "is_source_lookup"
//            ],
//            [
//                "u8",
//                "afi"
//            ],
//            [
//                "u8",
//                "next_hop",
//                16
//            ],
//            [
//                "u32",
//                "next_hop_id"
//            ],
//            [
//                "u32",
//                "rpf_id"
//            ],
//            [
//                "u32",
//                "via_label"
//            ],
//            [
//                "u8",
//                "n_labels"
//            ],
//            [
//                "vl_api_fib_mpls_label_t",
//                "label_stack",
//                16
//            ],
//            {
//                "crc": "0xabe483ef"
//            }
//
type FibPath struct {
	SwIfIndex         uint32
	TableID           uint32
	Weight            uint8
	Preference        uint8
	IsLocal           uint8
	IsDrop            uint8
	IsUDPEncap        uint8
	IsUnreach         uint8
	IsProhibit        uint8
	IsResolveHost     uint8
	IsResolveAttached uint8
	IsDvr             uint8
	IsSourceLookup    uint8
	Afi               uint8
	NextHop           []byte `struc:"[16]byte"`
	NextHopID         uint32
	RpfID             uint32
	ViaLabel          uint32
	NLabels           uint8
	LabelStack        []FibMplsLabel `struc:"[16]FibMplsLabel"`
}

func (*FibPath) GetTypeName() string {
	return "fib_path"
}
func (*FibPath) GetCrcString() string {
	return "abe483ef"
}

/* Messages */

// MplsIPBindUnbind represents the VPP binary API message 'mpls_ip_bind_unbind'.
// Generated from 'mpls.api.json', line 4:
//
//            "mpls_ip_bind_unbind",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "mb_mpls_table_id"
//            ],
//            [
//                "u32",
//                "mb_label"
//            ],
//            [
//                "u32",
//                "mb_ip_table_id"
//            ],
//            [
//                "u8",
//                "mb_is_bind"
//            ],
//            [
//                "u8",
//                "mb_is_ip4"
//            ],
//            [
//                "u8",
//                "mb_address_length"
//            ],
//            [
//                "u8",
//                "mb_address",
//                16
//            ],
//            {
//                "crc": "0xf0405565"
//            }
//
type MplsIPBindUnbind struct {
	MbMplsTableID   uint32
	MbLabel         uint32
	MbIPTableID     uint32
	MbIsBind        uint8
	MbIsIP4         uint8
	MbAddressLength uint8
	MbAddress       []byte `struc:"[16]byte"`
}

func (*MplsIPBindUnbind) GetMessageName() string {
	return "mpls_ip_bind_unbind"
}
func (*MplsIPBindUnbind) GetCrcString() string {
	return "f0405565"
}
func (*MplsIPBindUnbind) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewMplsIPBindUnbind() api.Message {
	return &MplsIPBindUnbind{}
}

// MplsIPBindUnbindReply represents the VPP binary API message 'mpls_ip_bind_unbind_reply'.
// Generated from 'mpls.api.json', line 51:
//
//            "mpls_ip_bind_unbind_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type MplsIPBindUnbindReply struct {
	Retval int32
}

func (*MplsIPBindUnbindReply) GetMessageName() string {
	return "mpls_ip_bind_unbind_reply"
}
func (*MplsIPBindUnbindReply) GetCrcString() string {
	return "e8d4e804"
}
func (*MplsIPBindUnbindReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewMplsIPBindUnbindReply() api.Message {
	return &MplsIPBindUnbindReply{}
}

// MplsTunnelAddDel represents the VPP binary API message 'mpls_tunnel_add_del'.
// Generated from 'mpls.api.json', line 69:
//
//            "mpls_tunnel_add_del",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "mt_sw_if_index"
//            ],
//            [
//                "u8",
//                "mt_is_add"
//            ],
//            [
//                "u8",
//                "mt_l2_only"
//            ],
//            [
//                "u8",
//                "mt_is_multicast"
//            ],
//            [
//                "u8",
//                "mt_next_hop_proto_is_ip4"
//            ],
//            [
//                "u8",
//                "mt_next_hop_weight"
//            ],
//            [
//                "u8",
//                "mt_next_hop_preference"
//            ],
//            [
//                "u8",
//                "mt_next_hop",
//                16
//            ],
//            [
//                "u8",
//                "mt_next_hop_n_out_labels"
//            ],
//            [
//                "u32",
//                "mt_next_hop_via_label"
//            ],
//            [
//                "u32",
//                "mt_next_hop_sw_if_index"
//            ],
//            [
//                "u32",
//                "mt_next_hop_table_id"
//            ],
//            [
//                "vl_api_fib_mpls_label_t",
//                "mt_next_hop_out_label_stack",
//                0,
//                "mt_next_hop_n_out_labels"
//            ],
//            {
//                "crc": "0xd02d9e06"
//            }
//
type MplsTunnelAddDel struct {
	MtSwIfIndex            uint32
	MtIsAdd                uint8
	MtL2Only               uint8
	MtIsMulticast          uint8
	MtNextHopProtoIsIP4    uint8
	MtNextHopWeight        uint8
	MtNextHopPreference    uint8
	MtNextHop              []byte `struc:"[16]byte"`
	MtNextHopNOutLabels    uint8  `struc:"sizeof=MtNextHopOutLabelStack"`
	MtNextHopViaLabel      uint32
	MtNextHopSwIfIndex     uint32
	MtNextHopTableID       uint32
	MtNextHopOutLabelStack []FibMplsLabel
}

func (*MplsTunnelAddDel) GetMessageName() string {
	return "mpls_tunnel_add_del"
}
func (*MplsTunnelAddDel) GetCrcString() string {
	return "d02d9e06"
}
func (*MplsTunnelAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewMplsTunnelAddDel() api.Message {
	return &MplsTunnelAddDel{}
}

// MplsTunnelAddDelReply represents the VPP binary API message 'mpls_tunnel_add_del_reply'.
// Generated from 'mpls.api.json', line 142:
//
//            "mpls_tunnel_add_del_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            {
//                "crc": "0xfda5941f"
//            }
//
type MplsTunnelAddDelReply struct {
	Retval    int32
	SwIfIndex uint32
}

func (*MplsTunnelAddDelReply) GetMessageName() string {
	return "mpls_tunnel_add_del_reply"
}
func (*MplsTunnelAddDelReply) GetCrcString() string {
	return "fda5941f"
}
func (*MplsTunnelAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewMplsTunnelAddDelReply() api.Message {
	return &MplsTunnelAddDelReply{}
}

// MplsTunnelDump represents the VPP binary API message 'mpls_tunnel_dump'.
// Generated from 'mpls.api.json', line 164:
//
//            "mpls_tunnel_dump",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "tunnel_index"
//            ],
//            {
//                "crc": "0x997d584a"
//            }
//
type MplsTunnelDump struct {
	TunnelIndex int32
}

func (*MplsTunnelDump) GetMessageName() string {
	return "mpls_tunnel_dump"
}
func (*MplsTunnelDump) GetCrcString() string {
	return "997d584a"
}
func (*MplsTunnelDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewMplsTunnelDump() api.Message {
	return &MplsTunnelDump{}
}

// MplsTunnelDetails represents the VPP binary API message 'mpls_tunnel_details'.
// Generated from 'mpls.api.json', line 186:
//
//            "mpls_tunnel_details",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "mt_sw_if_index"
//            ],
//            [
//                "u8",
//                "mt_tunnel_index"
//            ],
//            [
//                "u8",
//                "mt_l2_only"
//            ],
//            [
//                "u8",
//                "mt_is_multicast"
//            ],
//            [
//                "u32",
//                "mt_count"
//            ],
//            [
//                "vl_api_fib_path_t",
//                "mt_paths",
//                0,
//                "mt_count"
//            ],
//            {
//                "crc": "0xd1f5af66"
//            }
//
type MplsTunnelDetails struct {
	MtSwIfIndex   uint8
	MtTunnelIndex uint8
	MtL2Only      uint8
	MtIsMulticast uint8
	MtCount       uint32 `struc:"sizeof=MtPaths"`
	MtPaths       []FibPath
}

func (*MplsTunnelDetails) GetMessageName() string {
	return "mpls_tunnel_details"
}
func (*MplsTunnelDetails) GetCrcString() string {
	return "d1f5af66"
}
func (*MplsTunnelDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewMplsTunnelDetails() api.Message {
	return &MplsTunnelDetails{}
}

// MplsTableAddDel represents the VPP binary API message 'mpls_table_add_del'.
// Generated from 'mpls.api.json', line 226:
//
//            "mpls_table_add_del",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "mt_table_id"
//            ],
//            [
//                "u8",
//                "mt_is_add"
//            ],
//            [
//                "u8",
//                "mt_name",
//                64
//            ],
//            {
//                "crc": "0x83cf0340"
//            }
//
type MplsTableAddDel struct {
	MtTableID uint32
	MtIsAdd   uint8
	MtName    []byte `struc:"[64]byte"`
}

func (*MplsTableAddDel) GetMessageName() string {
	return "mpls_table_add_del"
}
func (*MplsTableAddDel) GetCrcString() string {
	return "83cf0340"
}
func (*MplsTableAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewMplsTableAddDel() api.Message {
	return &MplsTableAddDel{}
}

// MplsTableAddDelReply represents the VPP binary API message 'mpls_table_add_del_reply'.
// Generated from 'mpls.api.json', line 257:
//
//            "mpls_table_add_del_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type MplsTableAddDelReply struct {
	Retval int32
}

func (*MplsTableAddDelReply) GetMessageName() string {
	return "mpls_table_add_del_reply"
}
func (*MplsTableAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*MplsTableAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewMplsTableAddDelReply() api.Message {
	return &MplsTableAddDelReply{}
}

// MplsRouteAddDel represents the VPP binary API message 'mpls_route_add_del'.
// Generated from 'mpls.api.json', line 275:
//
//            "mpls_route_add_del",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "mr_label"
//            ],
//            [
//                "u8",
//                "mr_eos"
//            ],
//            [
//                "u32",
//                "mr_table_id"
//            ],
//            [
//                "u32",
//                "mr_classify_table_index"
//            ],
//            [
//                "u8",
//                "mr_is_add"
//            ],
//            [
//                "u8",
//                "mr_is_classify"
//            ],
//            [
//                "u8",
//                "mr_is_multicast"
//            ],
//            [
//                "u8",
//                "mr_is_multipath"
//            ],
//            [
//                "u8",
//                "mr_is_resolve_host"
//            ],
//            [
//                "u8",
//                "mr_is_resolve_attached"
//            ],
//            [
//                "u8",
//                "mr_is_interface_rx"
//            ],
//            [
//                "u8",
//                "mr_is_rpf_id"
//            ],
//            [
//                "u8",
//                "mr_next_hop_proto"
//            ],
//            [
//                "u8",
//                "mr_next_hop_weight"
//            ],
//            [
//                "u8",
//                "mr_next_hop_preference"
//            ],
//            [
//                "u8",
//                "mr_next_hop",
//                16
//            ],
//            [
//                "u8",
//                "mr_next_hop_n_out_labels"
//            ],
//            [
//                "u32",
//                "mr_next_hop_sw_if_index"
//            ],
//            [
//                "u32",
//                "mr_next_hop_table_id"
//            ],
//            [
//                "u32",
//                "mr_next_hop_via_label"
//            ],
//            [
//                "vl_api_fib_mpls_label_t",
//                "mr_next_hop_out_label_stack",
//                0,
//                "mr_next_hop_n_out_labels"
//            ],
//            {
//                "crc": "0xd4cc6a8d"
//            }
//
type MplsRouteAddDel struct {
	MrLabel                uint32
	MrEos                  uint8
	MrTableID              uint32
	MrClassifyTableIndex   uint32
	MrIsAdd                uint8
	MrIsClassify           uint8
	MrIsMulticast          uint8
	MrIsMultipath          uint8
	MrIsResolveHost        uint8
	MrIsResolveAttached    uint8
	MrIsInterfaceRx        uint8
	MrIsRpfID              uint8
	MrNextHopProto         uint8
	MrNextHopWeight        uint8
	MrNextHopPreference    uint8
	MrNextHop              []byte `struc:"[16]byte"`
	MrNextHopNOutLabels    uint8  `struc:"sizeof=MrNextHopOutLabelStack"`
	MrNextHopSwIfIndex     uint32
	MrNextHopTableID       uint32
	MrNextHopViaLabel      uint32
	MrNextHopOutLabelStack []FibMplsLabel
}

func (*MplsRouteAddDel) GetMessageName() string {
	return "mpls_route_add_del"
}
func (*MplsRouteAddDel) GetCrcString() string {
	return "d4cc6a8d"
}
func (*MplsRouteAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewMplsRouteAddDel() api.Message {
	return &MplsRouteAddDel{}
}

// MplsRouteAddDelReply represents the VPP binary API message 'mpls_route_add_del_reply'.
// Generated from 'mpls.api.json', line 380:
//
//            "mpls_route_add_del_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type MplsRouteAddDelReply struct {
	Retval int32
}

func (*MplsRouteAddDelReply) GetMessageName() string {
	return "mpls_route_add_del_reply"
}
func (*MplsRouteAddDelReply) GetCrcString() string {
	return "e8d4e804"
}
func (*MplsRouteAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewMplsRouteAddDelReply() api.Message {
	return &MplsRouteAddDelReply{}
}

// MplsFibDump represents the VPP binary API message 'mpls_fib_dump'.
// Generated from 'mpls.api.json', line 398:
//
//            "mpls_fib_dump",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            {
//                "crc": "0x51077d14"
//            }
//
type MplsFibDump struct{}

func (*MplsFibDump) GetMessageName() string {
	return "mpls_fib_dump"
}
func (*MplsFibDump) GetCrcString() string {
	return "51077d14"
}
func (*MplsFibDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewMplsFibDump() api.Message {
	return &MplsFibDump{}
}

// MplsFibDetails represents the VPP binary API message 'mpls_fib_details'.
// Generated from 'mpls.api.json', line 416:
//
//            "mpls_fib_details",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "table_id"
//            ],
//            [
//                "u8",
//                "table_name",
//                64
//            ],
//            [
//                "u8",
//                "eos_bit"
//            ],
//            [
//                "u32",
//                "label"
//            ],
//            [
//                "u32",
//                "count"
//            ],
//            [
//                "vl_api_fib_path_t",
//                "path",
//                0,
//                "count"
//            ],
//            {
//                "crc": "0x4404bf64"
//            }
//
type MplsFibDetails struct {
	TableID   uint32
	TableName []byte `struc:"[64]byte"`
	EosBit    uint8
	Label     uint32
	Count     uint32 `struc:"sizeof=Path"`
	Path      []FibPath
}

func (*MplsFibDetails) GetMessageName() string {
	return "mpls_fib_details"
}
func (*MplsFibDetails) GetCrcString() string {
	return "4404bf64"
}
func (*MplsFibDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewMplsFibDetails() api.Message {
	return &MplsFibDetails{}
}

// SwInterfaceSetMplsEnable represents the VPP binary API message 'sw_interface_set_mpls_enable'.
// Generated from 'mpls.api.json', line 457:
//
//            "sw_interface_set_mpls_enable",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "u8",
//                "enable"
//            ],
//            {
//                "crc": "0xa36fadc0"
//            }
//
type SwInterfaceSetMplsEnable struct {
	SwIfIndex uint32
	Enable    uint8
}

func (*SwInterfaceSetMplsEnable) GetMessageName() string {
	return "sw_interface_set_mpls_enable"
}
func (*SwInterfaceSetMplsEnable) GetCrcString() string {
	return "a36fadc0"
}
func (*SwInterfaceSetMplsEnable) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewSwInterfaceSetMplsEnable() api.Message {
	return &SwInterfaceSetMplsEnable{}
}

// SwInterfaceSetMplsEnableReply represents the VPP binary API message 'sw_interface_set_mpls_enable_reply'.
// Generated from 'mpls.api.json', line 483:
//
//            "sw_interface_set_mpls_enable_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type SwInterfaceSetMplsEnableReply struct {
	Retval int32
}

func (*SwInterfaceSetMplsEnableReply) GetMessageName() string {
	return "sw_interface_set_mpls_enable_reply"
}
func (*SwInterfaceSetMplsEnableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*SwInterfaceSetMplsEnableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewSwInterfaceSetMplsEnableReply() api.Message {
	return &SwInterfaceSetMplsEnableReply{}
}

/* Services */

type Services interface {
	DumpMplsFib(*MplsFibDump) (*MplsFibDetails, error)
	DumpMplsTunnel(*MplsTunnelDump) (*MplsTunnelDetails, error)
	MplsIPBindUnbind(*MplsIPBindUnbind) (*MplsIPBindUnbindReply, error)
	MplsRouteAddDel(*MplsRouteAddDel) (*MplsRouteAddDelReply, error)
	MplsTableAddDel(*MplsTableAddDel) (*MplsTableAddDelReply, error)
	MplsTunnelAddDel(*MplsTunnelAddDel) (*MplsTunnelAddDelReply, error)
	SwInterfaceSetMplsEnable(*SwInterfaceSetMplsEnable) (*SwInterfaceSetMplsEnableReply, error)
}

func init() {
	api.RegisterMessage((*MplsIPBindUnbind)(nil), "mpls.MplsIPBindUnbind")
	api.RegisterMessage((*MplsIPBindUnbindReply)(nil), "mpls.MplsIPBindUnbindReply")
	api.RegisterMessage((*MplsTunnelAddDel)(nil), "mpls.MplsTunnelAddDel")
	api.RegisterMessage((*MplsTunnelAddDelReply)(nil), "mpls.MplsTunnelAddDelReply")
	api.RegisterMessage((*MplsTunnelDump)(nil), "mpls.MplsTunnelDump")
	api.RegisterMessage((*MplsTunnelDetails)(nil), "mpls.MplsTunnelDetails")
	api.RegisterMessage((*MplsTableAddDel)(nil), "mpls.MplsTableAddDel")
	api.RegisterMessage((*MplsTableAddDelReply)(nil), "mpls.MplsTableAddDelReply")
	api.RegisterMessage((*MplsRouteAddDel)(nil), "mpls.MplsRouteAddDel")
	api.RegisterMessage((*MplsRouteAddDelReply)(nil), "mpls.MplsRouteAddDelReply")
	api.RegisterMessage((*MplsFibDump)(nil), "mpls.MplsFibDump")
	api.RegisterMessage((*MplsFibDetails)(nil), "mpls.MplsFibDetails")
	api.RegisterMessage((*SwInterfaceSetMplsEnable)(nil), "mpls.SwInterfaceSetMplsEnable")
	api.RegisterMessage((*SwInterfaceSetMplsEnableReply)(nil), "mpls.SwInterfaceSetMplsEnableReply")
}
