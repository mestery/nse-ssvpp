// Code generated by GoVPP binapi-generator. DO NOT EDIT.
// source: api/igmp.api.json

/*
Package igmp is a generated VPP binary API of the 'igmp' VPP module.

It is generated from this file:
	igmp.api.json

It contains these VPP binary API objects:
	15 messages
	6 types
	3 enums
	1 union
	7 services
*/
package igmp

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

/* Enums */

// AddressFamily represents the VPP binary API enum 'address_family'.
// Generated from 'igmp.api.json', line 377:
//
//            "address_family",
//            [
//                "ADDRESS_IP4",
//                0
//            ],
//            [
//                "ADDRESS_IP6",
//                1
//            ],
//            {
//                "enumtype": "u32"
//            }
//
type AddressFamily uint32

const (
	ADDRESS_IP4 AddressFamily = 0
	ADDRESS_IP6 AddressFamily = 1
)

// FilterMode represents the VPP binary API enum 'filter_mode'.
// Generated from 'igmp.api.json', line 391:
//
//            "filter_mode",
//            [
//                "EXCLUDE",
//                0
//            ],
//            [
//                "INCLUDE",
//                1
//            ],
//            {
//                "enumtype": "u32"
//            }
//
type FilterMode uint32

const (
	EXCLUDE FilterMode = 0
	INCLUDE FilterMode = 1
)

// GroupPrefixType represents the VPP binary API enum 'group_prefix_type'.
// Generated from 'igmp.api.json', line 405:
//
//            "group_prefix_type",
//            [
//                "ASM",
//                0
//            ],
//            [
//                "SSM",
//                1
//            ],
//            {
//                "enumtype": "u32"
//            }
//
type GroupPrefixType uint32

const (
	ASM GroupPrefixType = 0
	SSM GroupPrefixType = 1
)

/* Types */

// IP4Address represents the VPP binary API type 'ip4_address'.
// Generated from 'igmp.api.json', line 421:
//
//            "ip4_address",
//            [
//                "u8",
//                "address",
//                4
//            ],
//            {
//                "crc": "0xfc4baa28"
//            }
//
type IP4Address struct {
	Address []byte `struc:"[4]byte"`
}

func (*IP4Address) GetTypeName() string {
	return "ip4_address"
}
func (*IP4Address) GetCrcString() string {
	return "fc4baa28"
}

// IP6Address represents the VPP binary API type 'ip6_address'.
// Generated from 'igmp.api.json', line 432:
//
//            "ip6_address",
//            [
//                "u8",
//                "address",
//                16
//            ],
//            {
//                "crc": "0xad99ccc2"
//            }
//
type IP6Address struct {
	Address []byte `struc:"[16]byte"`
}

func (*IP6Address) GetTypeName() string {
	return "ip6_address"
}
func (*IP6Address) GetCrcString() string {
	return "ad99ccc2"
}

// Address represents the VPP binary API type 'address'.
// Generated from 'igmp.api.json', line 443:
//
//            "address",
//            [
//                "vl_api_address_family_t",
//                "af"
//            ],
//            [
//                "vl_api_address_union_t",
//                "un"
//            ],
//            {
//                "crc": "0x09f11671"
//            }
//
type Address struct {
	Af AddressFamily
	Un AddressUnion
}

func (*Address) GetTypeName() string {
	return "address"
}
func (*Address) GetCrcString() string {
	return "09f11671"
}

// Prefix represents the VPP binary API type 'prefix'.
// Generated from 'igmp.api.json', line 457:
//
//            "prefix",
//            [
//                "vl_api_address_t",
//                "address"
//            ],
//            [
//                "u8",
//                "address_length"
//            ],
//            {
//                "crc": "0x0403aebc"
//            }
//
type Prefix struct {
	Address       Address
	AddressLength uint8
}

func (*Prefix) GetTypeName() string {
	return "prefix"
}
func (*Prefix) GetCrcString() string {
	return "0403aebc"
}

// IgmpGroup represents the VPP binary API type 'igmp_group'.
// Generated from 'igmp.api.json', line 471:
//
//            "igmp_group",
//            [
//                "vl_api_filter_mode_t",
//                "filter"
//            ],
//            [
//                "u8",
//                "n_srcs"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "vl_api_ip4_address_t",
//                "gaddr"
//            ],
//            [
//                "vl_api_ip4_address_t",
//                "saddrs",
//                0,
//                "n_srcs"
//            ],
//            {
//                "crc": "0xc0f42621"
//            }
//
type IgmpGroup struct {
	Filter    FilterMode
	NSrcs     uint8 `struc:"sizeof=Saddrs"`
	SwIfIndex uint32
	Gaddr     IP4Address
	Saddrs    []IP4Address
}

func (*IgmpGroup) GetTypeName() string {
	return "igmp_group"
}
func (*IgmpGroup) GetCrcString() string {
	return "c0f42621"
}

// GroupPrefix represents the VPP binary API type 'group_prefix'.
// Generated from 'igmp.api.json', line 499:
//
//            "group_prefix",
//            [
//                "vl_api_group_prefix_type_t",
//                "type"
//            ],
//            [
//                "vl_api_prefix_t",
//                "prefix"
//            ],
//            {
//                "crc": "0x5398e813"
//            }
//
type GroupPrefix struct {
	Type   GroupPrefixType
	Prefix Prefix
}

func (*GroupPrefix) GetTypeName() string {
	return "group_prefix"
}
func (*GroupPrefix) GetCrcString() string {
	return "5398e813"
}

/* Unions */

// AddressUnion represents the VPP binary API union 'address_union'.
// Generated from 'igmp.api.json', line 333:
//
//            "address_union",
//            [
//                "vl_api_ip4_address_t",
//                "ip4"
//            ],
//            [
//                "vl_api_ip6_address_t",
//                "ip6"
//            ],
//            {
//                "crc": "0xd68a2fb4"
//            }
//
type AddressUnion struct {
	Union_data [16]byte
}

func (*AddressUnion) GetTypeName() string {
	return "address_union"
}
func (*AddressUnion) GetCrcString() string {
	return "d68a2fb4"
}

func (u *AddressUnion) SetIP4(a IP4Address) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.Union_data[:], b.Bytes())
}
func (u *AddressUnion) GetIP4() (a IP4Address) {
	var b = bytes.NewReader(u.Union_data[:])
	struc.Unpack(b, &a)
	return
}

func (u *AddressUnion) SetIP6(a IP6Address) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.Union_data[:], b.Bytes())
}
func (u *AddressUnion) GetIP6() (a IP6Address) {
	var b = bytes.NewReader(u.Union_data[:])
	struc.Unpack(b, &a)
	return
}

/* Messages */

// IgmpListen represents the VPP binary API message 'igmp_listen'.
// Generated from 'igmp.api.json', line 4:
//
//            "igmp_listen",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "vl_api_igmp_group_t",
//                "group"
//            ],
//            {
//                "crc": "0xa4973479"
//            }
//
type IgmpListen struct {
	Group IgmpGroup
}

func (*IgmpListen) GetMessageName() string {
	return "igmp_listen"
}
func (*IgmpListen) GetCrcString() string {
	return "a4973479"
}
func (*IgmpListen) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewIgmpListen() api.Message {
	return &IgmpListen{}
}

// IgmpListenReply represents the VPP binary API message 'igmp_listen_reply'.
// Generated from 'igmp.api.json', line 26:
//
//            "igmp_listen_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type IgmpListenReply struct {
	Retval int32
}

func (*IgmpListenReply) GetMessageName() string {
	return "igmp_listen_reply"
}
func (*IgmpListenReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IgmpListenReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewIgmpListenReply() api.Message {
	return &IgmpListenReply{}
}

// IgmpEnableDisable represents the VPP binary API message 'igmp_enable_disable'.
// Generated from 'igmp.api.json', line 44:
//
//            "igmp_enable_disable",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u8",
//                "enable"
//            ],
//            [
//                "u8",
//                "mode"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            {
//                "crc": "0x5bd2a570"
//            }
//
type IgmpEnableDisable struct {
	Enable    uint8
	Mode      uint8
	SwIfIndex uint32
}

func (*IgmpEnableDisable) GetMessageName() string {
	return "igmp_enable_disable"
}
func (*IgmpEnableDisable) GetCrcString() string {
	return "5bd2a570"
}
func (*IgmpEnableDisable) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewIgmpEnableDisable() api.Message {
	return &IgmpEnableDisable{}
}

// IgmpEnableDisableReply represents the VPP binary API message 'igmp_enable_disable_reply'.
// Generated from 'igmp.api.json', line 74:
//
//            "igmp_enable_disable_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type IgmpEnableDisableReply struct {
	Retval int32
}

func (*IgmpEnableDisableReply) GetMessageName() string {
	return "igmp_enable_disable_reply"
}
func (*IgmpEnableDisableReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IgmpEnableDisableReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewIgmpEnableDisableReply() api.Message {
	return &IgmpEnableDisableReply{}
}

// IgmpDump represents the VPP binary API message 'igmp_dump'.
// Generated from 'igmp.api.json', line 92:
//
//            "igmp_dump",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            {
//                "crc": "0x529cb13f"
//            }
//
type IgmpDump struct {
	SwIfIndex uint32
}

func (*IgmpDump) GetMessageName() string {
	return "igmp_dump"
}
func (*IgmpDump) GetCrcString() string {
	return "529cb13f"
}
func (*IgmpDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewIgmpDump() api.Message {
	return &IgmpDump{}
}

// IgmpDetails represents the VPP binary API message 'igmp_details'.
// Generated from 'igmp.api.json', line 114:
//
//            "igmp_details",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "vl_api_ip4_address_t",
//                "saddr"
//            ],
//            [
//                "vl_api_ip4_address_t",
//                "gaddr"
//            ],
//            {
//                "crc": "0x238a59f3"
//            }
//
type IgmpDetails struct {
	SwIfIndex uint32
	Saddr     IP4Address
	Gaddr     IP4Address
}

func (*IgmpDetails) GetMessageName() string {
	return "igmp_details"
}
func (*IgmpDetails) GetCrcString() string {
	return "238a59f3"
}
func (*IgmpDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewIgmpDetails() api.Message {
	return &IgmpDetails{}
}

// IgmpClearInterface represents the VPP binary API message 'igmp_clear_interface'.
// Generated from 'igmp.api.json', line 140:
//
//            "igmp_clear_interface",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            {
//                "crc": "0x529cb13f"
//            }
//
type IgmpClearInterface struct {
	SwIfIndex uint32
}

func (*IgmpClearInterface) GetMessageName() string {
	return "igmp_clear_interface"
}
func (*IgmpClearInterface) GetCrcString() string {
	return "529cb13f"
}
func (*IgmpClearInterface) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewIgmpClearInterface() api.Message {
	return &IgmpClearInterface{}
}

// IgmpClearInterfaceReply represents the VPP binary API message 'igmp_clear_interface_reply'.
// Generated from 'igmp.api.json', line 162:
//
//            "igmp_clear_interface_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type IgmpClearInterfaceReply struct {
	Retval int32
}

func (*IgmpClearInterfaceReply) GetMessageName() string {
	return "igmp_clear_interface_reply"
}
func (*IgmpClearInterfaceReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IgmpClearInterfaceReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewIgmpClearInterfaceReply() api.Message {
	return &IgmpClearInterfaceReply{}
}

// WantIgmpEvents represents the VPP binary API message 'want_igmp_events'.
// Generated from 'igmp.api.json', line 180:
//
//            "want_igmp_events",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "enable"
//            ],
//            [
//                "u32",
//                "pid"
//            ],
//            {
//                "crc": "0xcfaccc1f"
//            }
//
type WantIgmpEvents struct {
	Enable uint32
	PID    uint32
}

func (*WantIgmpEvents) GetMessageName() string {
	return "want_igmp_events"
}
func (*WantIgmpEvents) GetCrcString() string {
	return "cfaccc1f"
}
func (*WantIgmpEvents) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewWantIgmpEvents() api.Message {
	return &WantIgmpEvents{}
}

// WantIgmpEventsReply represents the VPP binary API message 'want_igmp_events_reply'.
// Generated from 'igmp.api.json', line 206:
//
//            "want_igmp_events_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type WantIgmpEventsReply struct {
	Retval int32
}

func (*WantIgmpEventsReply) GetMessageName() string {
	return "want_igmp_events_reply"
}
func (*WantIgmpEventsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantIgmpEventsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewWantIgmpEventsReply() api.Message {
	return &WantIgmpEventsReply{}
}

// IgmpEvent represents the VPP binary API message 'igmp_event'.
// Generated from 'igmp.api.json', line 224:
//
//            "igmp_event",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "u32",
//                "sw_if_index"
//            ],
//            [
//                "vl_api_filter_mode_t",
//                "filter"
//            ],
//            [
//                "vl_api_ip4_address_t",
//                "saddr"
//            ],
//            [
//                "vl_api_ip4_address_t",
//                "gaddr"
//            ],
//            {
//                "crc": "0xb1122e50"
//            }
//
type IgmpEvent struct {
	SwIfIndex uint32
	Filter    FilterMode
	Saddr     IP4Address
	Gaddr     IP4Address
}

func (*IgmpEvent) GetMessageName() string {
	return "igmp_event"
}
func (*IgmpEvent) GetCrcString() string {
	return "b1122e50"
}
func (*IgmpEvent) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewIgmpEvent() api.Message {
	return &IgmpEvent{}
}

// IgmpGroupPrefixSet represents the VPP binary API message 'igmp_group_prefix_set'.
// Generated from 'igmp.api.json', line 254:
//
//            "igmp_group_prefix_set",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "vl_api_group_prefix_t",
//                "gp"
//            ],
//            {
//                "crc": "0x7ae82c26"
//            }
//
type IgmpGroupPrefixSet struct {
	Gp GroupPrefix
}

func (*IgmpGroupPrefixSet) GetMessageName() string {
	return "igmp_group_prefix_set"
}
func (*IgmpGroupPrefixSet) GetCrcString() string {
	return "7ae82c26"
}
func (*IgmpGroupPrefixSet) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewIgmpGroupPrefixSet() api.Message {
	return &IgmpGroupPrefixSet{}
}

// IgmpGroupPrefixSetReply represents the VPP binary API message 'igmp_group_prefix_set_reply'.
// Generated from 'igmp.api.json', line 276:
//
//            "igmp_group_prefix_set_reply",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "i32",
//                "retval"
//            ],
//            {
//                "crc": "0xe8d4e804"
//            }
//
type IgmpGroupPrefixSetReply struct {
	Retval int32
}

func (*IgmpGroupPrefixSetReply) GetMessageName() string {
	return "igmp_group_prefix_set_reply"
}
func (*IgmpGroupPrefixSetReply) GetCrcString() string {
	return "e8d4e804"
}
func (*IgmpGroupPrefixSetReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewIgmpGroupPrefixSetReply() api.Message {
	return &IgmpGroupPrefixSetReply{}
}

// IgmpGroupPrefixDump represents the VPP binary API message 'igmp_group_prefix_dump'.
// Generated from 'igmp.api.json', line 294:
//
//            "igmp_group_prefix_dump",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "client_index"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            {
//                "crc": "0x51077d14"
//            }
//
type IgmpGroupPrefixDump struct{}

func (*IgmpGroupPrefixDump) GetMessageName() string {
	return "igmp_group_prefix_dump"
}
func (*IgmpGroupPrefixDump) GetCrcString() string {
	return "51077d14"
}
func (*IgmpGroupPrefixDump) GetMessageType() api.MessageType {
	return api.RequestMessage
}
func NewIgmpGroupPrefixDump() api.Message {
	return &IgmpGroupPrefixDump{}
}

// IgmpGroupPrefixDetails represents the VPP binary API message 'igmp_group_prefix_details'.
// Generated from 'igmp.api.json', line 312:
//
//            "igmp_group_prefix_details",
//            [
//                "u16",
//                "_vl_msg_id"
//            ],
//            [
//                "u32",
//                "context"
//            ],
//            [
//                "vl_api_group_prefix_t",
//                "gp"
//            ],
//            {
//                "crc": "0xc6b0f93d"
//            }
//
type IgmpGroupPrefixDetails struct {
	Gp GroupPrefix
}

func (*IgmpGroupPrefixDetails) GetMessageName() string {
	return "igmp_group_prefix_details"
}
func (*IgmpGroupPrefixDetails) GetCrcString() string {
	return "c6b0f93d"
}
func (*IgmpGroupPrefixDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}
func NewIgmpGroupPrefixDetails() api.Message {
	return &IgmpGroupPrefixDetails{}
}

/* Services */

type Services interface {
	DumpIgmp(*IgmpDump) (*IgmpDetails, error)
	DumpIgmpGroupPrefix(*IgmpGroupPrefixDump) (*IgmpGroupPrefixDetails, error)
	IgmpClearInterface(*IgmpClearInterface) (*IgmpClearInterfaceReply, error)
	IgmpEnableDisable(*IgmpEnableDisable) (*IgmpEnableDisableReply, error)
	IgmpGroupPrefixSet(*IgmpGroupPrefixSet) (*IgmpGroupPrefixSetReply, error)
	IgmpListen(*IgmpListen) (*IgmpListenReply, error)
	WantIgmpEvents(*WantIgmpEvents) (*WantIgmpEventsReply, error)
}

func init() {
	api.RegisterMessage((*IgmpListen)(nil), "igmp.IgmpListen")
	api.RegisterMessage((*IgmpListenReply)(nil), "igmp.IgmpListenReply")
	api.RegisterMessage((*IgmpEnableDisable)(nil), "igmp.IgmpEnableDisable")
	api.RegisterMessage((*IgmpEnableDisableReply)(nil), "igmp.IgmpEnableDisableReply")
	api.RegisterMessage((*IgmpDump)(nil), "igmp.IgmpDump")
	api.RegisterMessage((*IgmpDetails)(nil), "igmp.IgmpDetails")
	api.RegisterMessage((*IgmpClearInterface)(nil), "igmp.IgmpClearInterface")
	api.RegisterMessage((*IgmpClearInterfaceReply)(nil), "igmp.IgmpClearInterfaceReply")
	api.RegisterMessage((*WantIgmpEvents)(nil), "igmp.WantIgmpEvents")
	api.RegisterMessage((*WantIgmpEventsReply)(nil), "igmp.WantIgmpEventsReply")
	api.RegisterMessage((*IgmpEvent)(nil), "igmp.IgmpEvent")
	api.RegisterMessage((*IgmpGroupPrefixSet)(nil), "igmp.IgmpGroupPrefixSet")
	api.RegisterMessage((*IgmpGroupPrefixSetReply)(nil), "igmp.IgmpGroupPrefixSetReply")
	api.RegisterMessage((*IgmpGroupPrefixDump)(nil), "igmp.IgmpGroupPrefixDump")
	api.RegisterMessage((*IgmpGroupPrefixDetails)(nil), "igmp.IgmpGroupPrefixDetails")
}
